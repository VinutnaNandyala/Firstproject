def err=null
node{
     try{
envv="${envv}"
server="${Server}"
notifyStarted()
 stage("checkout latest From TFS") {
   build job: 'TFS_QAjob', propagate: false
    

    // if(envv == 'Dev') {
   // checkout( [$class: 'TeamFoundationServerScm', credentialsConfigurer: [$class: 'AutomaticCredentialsConfigurer'], projectPath: '$/DFSSACommission/Working/Concierge UI-Dev branch/', serverUrl: 'https://cygnus.cognizant.com/tfs/dfsventuresingaporeptelimited', useOverwrite: true, useUpdate: true, workspaceName: 'Hudson-${JOB_NAME}-${NODE_NAME}'] )
         //   }
 }
// }
  stage("Copy TFS QA workspace to Pipeline")
    {
    powershell 'Copy-Item -Path "C:\\Program Files (x86)\\Jenkins\\workspace\\TFS_QAjob\\*" -Recurse -Destination "C:\\Program Files (x86)\\Jenkins\\workspace\\Pipeline_QA\\" -Force'
}
   stage("cleaning target directory"){
         powershell 'Remove-Item C:\\outproject\\_PublishedWebsites\\LoyalTPL* -Recurse -Force'
         }
       
  stage("Build the application") {
      bat "\"${tool 'MSBuild'}\" %Loyal T Concierge.sln% /t:rebuild /p:Configuration=Release /p:DebugSymbols=false /p:DebugType=None /p:PrecompilerBeforePublish=false /p:outdir=C:\\outproject\\"
  }
  stage("Moving web.conifg to another folder") {
      powershell returnStatus: true, script: 'C:\\powershell\\web.ps1'
  }
  stage("Web config transformation") {
      if(envv == 'QA' && server == '10.176.35.147'){
         powershell 'Copy-Item -Path C:\\outproject\\_PublishedWebsites\\WebConfig\\Web_QA1.config  -Destination C:\\outproject\\_PublishedWebsites\\LoyalTPL\\'
         powershell 'rename-item -Path C:\\outproject\\_PublishedWebsites\\LoyalTPL\\Web_QA1.config -newname web.config' 
          
      }
      if(envv == 'UAT' && server == '10.176.95.61'){
        powershell 'Copy-Item -Path C:\\outproject\\_PublishedWebsites\\WebConfig\\Web_UAT1.config  -Destination C:\\outproject\\_PublishedWebsites\\LoyalTPL\\'  
        powershell 'rename-item -Path C:\\outproject\\_PublishedWebsites\\LoyalTPL\\Web_UAT1.config -newname web.config '
      }
      if(envv == 'UAT' && server == '10.176.95.63'){
        powershell 'Copy-Item -Path C:\\outproject\\_PublishedWebsites\\WebConfig\\Web_UAT2.config  -Destination C:\\outproject\\_PublishedWebsites\\LoyalTPL\\'  
        powershell 'rename-item -Path C:\\outproject\\_PublishedWebsites\\LoyalTPL\\Web_UAT2.config -newname web.config '
      }
      if(envv == 'PROD' && server == '10.176.33.32'){
        powershell 'Copy-Item -Path C:\\outproject\\_PublishedWebsites\\WebConfig\\Web_Prod1.config  -Destination C:\\outproject\\_PublishedWebsites\\LoyalTPL\\'  
        powershell 'rename-item -Path C:\\outproject\\_PublishedWebsites\\LoyalTPL\\Web_Prod1.config -newname web.config '
      } 
       if(envv == 'PROD' && server == '10.176.33.33'){
        powershell 'Copy-Item -Path C:\\outproject\\_PublishedWebsites\\WebConfig\\Web_Prod2.config  -Destination C:\\outproject\\_PublishedWebsites\\LoyalTPL\\'  
        powershell 'rename-item -Path C:\\outproject\\_PublishedWebsites\\LoyalTPL\\Web_Prod2.config -newname web.config '
      } 
  }
  stage("cleanup webconfig folder"){
     powershell 'Remove-Item C:\\outproject\\_PublishedWebsites\\WebConfig\\* -Recurse -Force' 
  }
  
 // stage('Take backup on remote server'){
  //  powershell returnStatus: true, script: 'C:\\Users\\804175\\Documents\\Dev_backup.ps1' 
        //   }
 // stage('Take backup on remote server'){
  //    if(envv == 'QA'&& server == '10.176.33.207'){
  ////   powershell returnStatus: true, script: 'C:\\Users\\804175\\Documents\\Dev_backup.ps1' 
    //  }
  //  }
   notifySuccessful() 
   
}catch (e) {
     currentBuild.result = "FAILED"
     notifyFailed()
     throw e
   }
finally{
    echo "success"
}
}
def notifyStarted() {
        emailext ( 
       subject: "STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'", 
       body: """<p>STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
         <p>Check console output at "<a href="${env.BUILD_URL}">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>""",
         to: '$DEFAULT_RECIPIENTS'
      // recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']]
     )
 }
 def notifySuccessful() {
      emailext (
       subject: "Jenkins Build: '${currentBuild.currentResult}: Job [${env.JOB_NAME}]'",
       //subject: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
       body: """<p>SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
         <p>Check console output at "<a href="${env.BUILD_URL}">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>""",
         to: '$DEFAULT_RECIPIENTS'
      // recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']]
     )
 }
 def notifyFailed() {
      emailext (
       subject: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
       body: """<p>FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
         <p>Check console output at "<a href="${env.BUILD_URL}">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>""",
         to: '$DEFAULT_RECIPIENTS'
      // recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']]
     )
 }

